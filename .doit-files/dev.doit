doit_utl = "doit -t .doit-files/utl.doit"
doit_dev = "doit -t .doit-files/dev.doit"
doit_env = "doit -t .doit-files/env.doit"

dev {
	@ Copy the targetted module's data to the set foundry data directory
	$$$
	module=`$doit_env tgt -r`
	fdata="$$(jq -r .foundry.data .devenv)/Data/modules/$$module"
	rm -Rf "$$fdata"
	cp -R "./$$module" "$$fdata"
	$doit_dev proc_module "$$fdata"
	echo "Copied $$module to $$fdata"
	$$$
}
pack {
	@ Package the targetted module for release
	$$$
	module=`jq -r .module .devenv`
	version=`jq -r .version "$$module/module.json"`
	dir="release/$${module}_$$version"
	rm -Rf "$$dir"
	rm -Rf "release/bundle"
	mkdir -p "release/bundle" || exit
	cp -Lr "$$module"/* "release/bundle/" || exit
	$doit_dev proc_module "release/bundle" || exit

	mkdir -p "$$dir" && \
		cp "release/bundle/module.json" "$$dir" && \
	 	(cd "release/bundle" ; zip -r "../../$$dir/$$module.zip" "./") || exit
	rm -R "release/bundle" || exit

	if command -v -- explorer.exe > /dev/null 2>&1; then
		$doit_utl confirm '"Do you want to open the bundle in explorer?"' Y && explorer.exe "$$dir"
	elif command -v -- browse > /dev/null 2>&1; then
		$doit_utl confirm '"Do you want to open the bundle in file browser?"' Y && browse "$$dir"
	elif command -v -- open > /dev/null 2>&1; then
		$doit_utl confirm '"Do you want to open the bundle in finder?"' Y && open "$$dir"
	fi
	$$$
}
proc_module {
%%%
import os
import sys
import glob
in_file = '$1'
out_file = '$2'
src_files = ',\n\t\t'.join([f'"{os.path.relpath(x, in_file)}"' for x in glob.glob(in_file + "/src/**/*.*js", recursive=True)])
css_files = ',\n\t'.join([f'"{os.path.relpath(x, in_file)}"' for x in glob.glob(in_file + "/css/**/*.css", recursive=True)])
if len(out_file) == 0:
	out_file = in_file
file = ''
with open(in_file + "/module.json", "r") as manifest:
	file = manifest.read()
file = file.replace("\"{{sources}}\"", f"[\n\t\t{src_files}\n\t]")
file = file.replace("\"{{css}}\"", f"[\n\t\t{css_files}\n\t]")
with open(out_file + "/module.json", "w") as manifest:
	manifest.write(file)
%%%
}
